apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'com.github.gfx.ribbonizer'

android {
    def appNameProject = "ProjetoPets"
    def appVersionCode = 1
    def appVersionName = "testes"
    def appSDKMinBase = 19 //kitkat
    def appSDKBase = 25 //nougat .1
    def appBuildToolName = "25.0.2"
    def appUID = "br.com.projeto.pets"

    compileSdkVersion appSDKBase
    buildToolsVersion appBuildToolName

    defaultConfig {
        applicationId appUID
        minSdkVersion appSDKMinBase
        targetSdkVersion appSDKBase
        //noinspection GroovyAssignabilityCheck
        versionCode = appVersionCode
        //noinspection GroovyAssignabilityCheck
        versionName = appVersionName

        //expresso android test
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //suporte ao SVG vector drawable DEPOIS do plugin 2.0 do gradle
        // Stops the Gradleâ€™s automatic rasterization of vectors
        vectorDrawables.useSupportLibrary = true
    }
    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
        //
    }
    //suporte ao SVG vector drawable antes do plugin 2.0 do gradle
    // Flag that tells aapt to keep the attribute ids
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }
//    signingConfigs {
//        release {
//            storeFile file("../key/key.keystore")
//            storePassword "Key"
//            keyAlias "Key"
//            keyPassword "Key"
//        }
//    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix '-debug' + '-build-' + appVersionCode
        }
        homol {
            //noinspection GroovyAssignabilityCheck
            //signingConfig signingConfigs.release
            debuggable true
            applicationIdSuffix ".homol"
            versionNameSuffix '-homol' + '-build-' + appVersionCode
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            //noinspection GroovyAssignabilityCheck
            //signingConfig signingConfigs.release
            debuggable false
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def newApkName

            if (variant.buildType.name == "release") {

                if (output.zipAlign) {
                    newApkName = "${appNameProject}-${output.baseName}-${variant.versionName}-${appVersionCode}.apk"
                } else {
                    newApkName = "${appNameProject}-${output.baseName}-${variant.versionName}-${appVersionCode}-unaligned.apk"
                }

            } else {

                if (output.zipAlign) {
                    newApkName = "${appNameProject}-${output.baseName}-${variant.versionName}.apk"
                } else {
                    newApkName = "${appNameProject}-${output.baseName}-${variant.versionName}-unaligned.apk"
                }

            }

            //noinspection GroovyAssignabilityCheck
            output.outputFile = new File(output.outputFile.parent, newApkName)
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

//noinspection GroovyAssignabilityCheck
configurations.all {
    //expresso android test
    resolutionStrategy.force 'com.android.support:support-annotations:25.2.0'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    //pai google
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.android.support:design:25.2.0'
    compile 'com.android.support:cardview-v7:25.2.0'
    compile 'com.android.support:recyclerview-v7:25.2.0'
    compile 'com.android.support:support-v4:25.2.0'

    //https://github.com/VicMikhailau/MaskedEditText
    compile 'com.vicmikhailau:MaskedEditText:2.0.1'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    //glide
    compile 'com.github.bumptech.glide:glide:3.7.0'
    //gson
    compile 'com.google.code.gson:gson:2.8.0'
    //retrofit 20
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    //debug
    compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.6.0'
    //expresso android test
    compile 'com.android.support:support-annotations:25.2.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
}

ribbonizer {
    // "manifest application[android:icon]" is automatically added to the list
    iconNames "@drawable/ic_launcher"

    builder { variant, iconFile ->
        // change ribbon colors by product flavors\

        if (variant.buildType.name == "debug") {
            return grayRibbonFilter(variant, iconFile)
        } else if (variant.buildType.name == "homol") {
            return yellowRibbonFilter(variant, iconFile)
        }
    }

    //Although `canary` build-type is marked as `non-debuggable`
    //we can still force specific variants to be ribbonized:
    //forcedVariantsNames "demoConfigRelease"
}